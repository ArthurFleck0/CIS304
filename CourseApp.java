
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;




/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Amad Asim
 */
public class CourseApp extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public CourseApp() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    //<editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        studentList = new javax.swing.JList<>();
        courseDelete = new javax.swing.JButton();
        courseAdd = new javax.swing.JButton();
        studentAdd = new javax.swing.JButton();
        studentDelete = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        courseDropDown = new javax.swing.JComboBox<>();
        textField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(studentList);

        courseDelete.setText("Delete Course");
        courseDelete.setMaximumSize(new java.awt.Dimension(117, 25));
        courseDelete.setMinimumSize(new java.awt.Dimension(117, 25));
        courseDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseDeleteActionPerformed(evt);
            }
        });

        courseAdd.setText("Add Course");
        courseAdd.setMaximumSize(new java.awt.Dimension(117, 25));
        courseAdd.setMinimumSize(new java.awt.Dimension(117, 25));
        courseAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseAddActionPerformed(evt);
            }
        });

        studentAdd.setText("Add Student");
        studentAdd.setMaximumSize(new java.awt.Dimension(117, 25));
        studentAdd.setMinimumSize(new java.awt.Dimension(117, 25));
        studentAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentAddActionPerformed(evt);
            }
        });

        studentDelete.setText("Delete Student");
        studentDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentDeleteActionPerformed(evt);
            }
        });

        jLabel1.setText("Courses:");

        jLabel2.setText("Entry to Add:");

        jLabel3.setText("Student List:");

        jLabel4.setText("Student Course Application");

        courseDropDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseDropDownActionPerformed(evt);
            }
        });
        
       textField.addKeyListener(new KeyAdapter() {
           
            public void keyPressed(KeyEvent e) {
                if(e.isAltDown() && e.getKeyChar() == 'a'){
                    studentAddActionPerformed(null);
                }
                
                if(e.isAltDown() && e.getKeyChar() == 'd'){
                    studentDeleteActionPerformed(null);
                }
            }
    });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(studentDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(studentAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(courseDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(textField, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(courseAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(courseDelete, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(courseDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(courseDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(courseAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(studentAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(studentDelete))
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        
        updateModels();

        pack();
    }// </editor-fold>                                            

    private void courseDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseDeleteActionPerformed
        Object selectedItem = courseDropDown.getSelectedItem();
        String courseName = selectedItem.toString();
        Object[] options = {"Yes", "No"};
        int n = JOptionPane.showOptionDialog(this,
        "Are you sure to delete " + courseName+ " and its associated students?",
        "Delete course",
        JOptionPane.DEFAULT_OPTION,
        JOptionPane.WARNING_MESSAGE,
        null,
        options,
        options[1]);
        
        if(n == 0){
            dataManipulator.deleteCourse(courseName);
            courseDropDown.removeItem(selectedItem);
            updateModels();
        }
        
        
    }//GEN-LAST:event_courseDeleteActionPerformed

    private void courseAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseAddActionPerformed
        // TODO add your handling code here:
         if(textField.getText().isEmpty()){
            JOptionPane.showMessageDialog(this,"You must enter a course in the text field.","Missing a course",JOptionPane.ERROR_MESSAGE);
            return;
         }
         String cName = textField.getText();
         dataManipulator.addCourse(cName);
         updateModels();
         //update model
    }//GEN-LAST:event_courseAddActionPerformed

    private void studentAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentAddActionPerformed
        // TODO add your handling code here:
        if(textField.getText().isEmpty()){
            JOptionPane.showMessageDialog(this,"You must enter a student name in the text field.","Missing a student name",JOptionPane.ERROR_MESSAGE);
            return;
        }
        String sName = textField.getText();
        Object sObj = courseDropDown.getSelectedItem();
        String cName = sObj.toString();
        dataManipulator.addStudent(cName, sName);
        updateModels();
        courseDropDown.setSelectedItem(sObj);
    }//GEN-LAST:event_studentAddActionPerformed

    private void studentDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentDeleteActionPerformed
         Object sObj = courseDropDown.getSelectedItem();
         String course = sObj.toString();
         java.util.List<String> names = studentList.getSelectedValuesList();
         
         if(names.size() == 0){
            JOptionPane.showMessageDialog(this,"You must select a student name in the list for deletion.","No Student Selected",JOptionPane.ERROR_MESSAGE);
            return;
         }
         
        Object[] options = {"Yes", "No"};
        int n = JOptionPane.showOptionDialog(this,
        "Are you sure to delete the foloowing student(s) from " + course + "? " +
        System.lineSeparator() + names.toString(),
        "Delete student(s)",
        JOptionPane.DEFAULT_OPTION,
        JOptionPane.WARNING_MESSAGE,
        null,
        options,
        options[1]);
        
        if(n == 0){
             dataManipulator.deleteStudent(course, names);
             updateModels();
             courseDropDown.setSelectedItem(sObj);
        }
        
    }//GEN-LAST:event_studentDeleteActionPerformed

    private void courseDropDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseDropDownActionPerformed
        // TODO add your handling code here:
        updateListModel();
    }//GEN-LAST:event_courseDropDownActionPerformed

    
    private void updateModels(){
       updateComboModel();
       updateListModel();
    }
    
    private void updateComboModel(){
         courseDropDown.setModel(new javax.swing.DefaultComboBoxModel<>(dataManipulator.getCourses()));
    }
    
    private void updateListModel(){
        studentList.setModel(new javax.swing.AbstractListModel<String>() {
            String cName = courseDropDown.getSelectedItem().toString();
            String[] strings = dataManipulator.getStudents(cName);
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
    }
 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]){
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CourseApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CourseApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CourseApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CourseApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CourseApp().setVisible(true);
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton courseAdd;
    private javax.swing.JButton courseDelete;
    private javax.swing.JComboBox<String> courseDropDown;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton studentAdd;
    private javax.swing.JButton studentDelete;
    private javax.swing.JList<String> studentList;
    private javax.swing.JTextField textField;
    // End of variables declaration//GEN-END:variables
    private CourseData dataManipulator = new CourseData();

}
